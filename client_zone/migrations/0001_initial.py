# Generated by Django 5.0.1 on 2024-10-31 11:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommercialOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(verbose_name='Дата создания')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('subject', models.CharField(max_length=255, verbose_name='Предмет КП')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_address', models.CharField(max_length=255)),
                ('inn', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=254)),
                ('actual_address', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_account', models.CharField(blank=True, max_length=255, null=True)),
                ('bik', models.CharField(blank=True, max_length=9, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255)),
                ('user_count', models.IntegerField()),
                ('paid_until', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('paid', 'Оплачено'), ('unpaid', 'Не оплачено')], max_length=50, verbose_name='Статус')),
                ('number', models.CharField(max_length=100, verbose_name='Номер')),
                ('created_date', models.DateField(verbose_name='Дата создания')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('subject', models.CharField(max_length=255, verbose_name='Предмет')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('inn', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Productdetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('paid_until', models.DateField()),
                ('solution_type', models.CharField(max_length=255)),
                ('package', models.CharField(max_length=255)),
                ('user_count', models.IntegerField(default=0)),
                ('active_user_count', models.IntegerField(default=0)),
                ('subscription_until', models.DateField()),
                ('services_ordered', models.TextField(default='Услуги не были ещё заказаны')),
            ],
        ),
        migrations.CreateModel(
            name='RegularPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Активно'), ('inactive', 'Неактивно')], max_length=50, verbose_name='Статус')),
                ('contact_id', models.CharField(max_length=100, verbose_name='Контактный ID')),
                ('product', models.CharField(max_length=255, verbose_name='Продукт')),
                ('payment_method', models.CharField(max_length=100, verbose_name='Способ оплаты')),
                ('next_payment', models.DateField(verbose_name='Следующий платеж')),
                ('period', models.CharField(max_length=50, verbose_name='Период')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
            ],
        ),
        migrations.CreateModel(
            name='CommercialOffersPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('offers', models.ManyToManyField(to='client_zone.commercialoffer', verbose_name='Коммерческие предложения')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='InvoicesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('invoices', models.ManyToManyField(to='client_zone.invoice', verbose_name='Счета на оплату')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RegularPaymentsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('regular_payments', models.ManyToManyField(to='client_zone.regularpayment', verbose_name='Регулярные платежи')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
